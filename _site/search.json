[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Nosy Whale",
    "section": "",
    "text": "My name is Emma. I am a biologist in my honours year at the University of Cape Town.\nI am curious about marine megafauna. It’s easy to realise our insignificance when facing a gentle giant. I am interested in whale and shark behaviour, communication, distribution, and genetics. I am interested in how climate change is altering nature and how nature is evolving because of and it. I am interested in humans and how they interact with the world around them.\nFor now this website will be dedicated to getting better at coding. So it’ll likely be code and some GIS visuals for projects. Hopefully a link to a publication sometime next year."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About",
    "section": "",
    "text": "About this site\n\n1 + 1\n\n[1] 2"
  },
  {
    "objectID": "shyshark.html",
    "href": "shyshark.html",
    "title": "Shyshark Distribution",
    "section": "",
    "text": "This is a distributional map of shysharks around the coast of Southern Africa. Shysharks are an endemic, benthic genus of sharks found along the Southern African coast. Though there are four shyshark species, I’ve focused on two (the Puffadder shyshark or Happy Eddy - Haploblepharus edwardsii - and the Dark shyshark - H. pictus) as the Brown shyshark (H. fuscus) and Natal shyshark (H. kistnasamyi) are rather cryptic and there are only a few observations of them on iNaturalist (where I got my data).\nFirst we start by clearing our work space.\n\nrm(list=ls())\n\nTo run the code you will need the packages tidyverse, sp, sf, raster, lwgeom, terra, stars, exactextractr, hrbrthemes,cowplot, rinat, prettymapr, ggspatial, leaflet, mapview, htmltools, leafpop, rnaturalearth, and rnaturalearthdata.\n\nmy_packages &lt;- c(\"tidyverse\", \"sp\", \"sf\", \"raster\", \"lwgeom\", \"terra\", \"stars\", \"exactextractr\", \"hrbrthemes\",\"cowplot\", \"rinat\", \"prettymapr\", \"ggspatial\", \"leaflet\", \"mapview\", \"htmltools\", \"leafpop\", \"rnaturalearth\", \"rnaturalearthdata\") \nlapply(my_packages, require, character.only = TRUE)\n\nLoading required package: tidyverse\n\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.4.4     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\nLoading required package: sp\n\nLoading required package: sf\n\nLinking to GEOS 3.11.2, GDAL 3.7.2, PROJ 9.3.0; sf_use_s2() is TRUE\n\nLoading required package: raster\n\n\nAttaching package: 'raster'\n\n\nThe following object is masked from 'package:dplyr':\n\n    select\n\n\nLoading required package: lwgeom\n\nLinking to liblwgeom 3.0.0beta1 r16016, GEOS 3.11.2, PROJ 9.3.0\n\n\nAttaching package: 'lwgeom'\n\n\nThe following object is masked from 'package:sf':\n\n    st_perimeter\n\n\nLoading required package: terra\n\nterra 1.7.71\n\n\nAttaching package: 'terra'\n\n\nThe following object is masked from 'package:tidyr':\n\n    extract\n\n\nLoading required package: stars\n\nLoading required package: abind\n\nLoading required package: exactextractr\n\nLoading required package: hrbrthemes\n\nNOTE: Either Arial Narrow or Roboto Condensed fonts are required to use these themes.\n\n      Please use hrbrthemes::import_roboto_condensed() to install Roboto Condensed and\n\n      if Arial Narrow is not on your system, please see https://bit.ly/arialnarrow\n\nLoading required package: cowplot\n\n\nAttaching package: 'cowplot'\n\n\nThe following object is masked from 'package:lubridate':\n\n    stamp\n\n\nLoading required package: rinat\n\nLoading required package: prettymapr\n\nLoading required package: ggspatial\n\nLoading required package: leaflet\n\nLoading required package: mapview\n\nLoading required package: htmltools\n\nLoading required package: leafpop\n\nLoading required package: rnaturalearth\n\nLoading required package: rnaturalearthdata\n\n\nAttaching package: 'rnaturalearthdata'\n\n\nThe following object is masked from 'package:rnaturalearth':\n\n    countries110\n\n\nNow we’re going to get the data from iNaturalist (using the “rinat” package), and name the dataframes “puffyshark” for the Happy Eddies and “darkshark” for the dark shysharks.\n\npuffyshark &lt;- get_inat_obs(taxon_name = \"Haploblepharus edwardsii\", maxresults = 600) \n\ndarkshark &lt;- get_inat_obs(taxon_name = \"Haploblepharus pictus\", maxresults = 600)\n\nTo exclude observations in the northern hemisphere, observations with low positional accuracy, latitude values that are NA, and non research grade observations we use the filter function (tidyverse).\n\npuffyshark &lt;- puffyshark %&gt;% filter(positional_accuracy &lt; 100 & latitude &lt;0 & !is.na(latitude) & quality_grade == \"research\")\n\ndarkshark &lt;- darkshark %&gt;% filter(positional_accuracy &lt; 100 & latitude &lt;0 & !is.na(latitude) & quality_grade == \"research\")\n\nIn order to actually plot these data we need to make the dataframes spatial objects of the class “sf”.\n\npuffyshark &lt;- st_as_sf(puffyshark, coords = c(\"longitude\", \"latitude\"), crs = 4326) \n\ndarkshark &lt;- st_as_sf(darkshark, coords = c(\"longitude\", \"latitude\"), crs = 4326)\n\nIf we want to avoid a whole lot a pain in the future (generally a good habit to create when working with GIS) we need to check the class and coordinate reference system (CRS) of our dataframes\n\nclass(puffyshark)\nclass(darkshark)\n\nst_crs(puffyshark)\nst_crs(darkshark) \n\nNice!! All systems go!\nBut wait! There’s some more filtering that needs to happen - we want to exclude all observations of sharks that were made on land (shoutout to ChatGPT for the help).\nWe start by creating a dataframe for the land surface and checking that the CRS matches our other dataframes’ CRS.\n\nworld_land &lt;- ne_countries(scale = \"medium\", returnclass = \"sf\", country = \"south africa\")\n\nst_crs(world_land)\n\nNext we need to spatially join this dataframe to ID the shark observations on land and create new dataframes without those observations.\n\nlandsharks_ps &lt;- st_join(puffyshark, world_land, join = st_disjoint) %&gt;% filter(!is.na(iso_a2))\noceanshark_ps &lt;- puffyshark[puffyshark$geometry %in% landsharks_ps$geometry,] \n\nlandsharks_ds &lt;- st_join(darkshark, world_land, join = st_disjoint) %&gt;% filter(!is.na(iso_a2))\noceanshark_ds &lt;- darkshark[darkshark$geometry %in% landsharks_ds$geometry,]\n\nLet’s see if that worked by plotting these data.\n\nggplot() + \n  annotation_map_tile(type = \"osm\", progress = \"none\") + \n  geom_sf(data = oceanshark_ps, color = \"#85B22C\")\n\n\n\nggplot() + \n  annotation_map_tile(type = \"osm\", progress = \"none\") + \n  geom_sf(data = oceanshark_ds, color = \"#422CB2\")\n\n\n\n\nHmm. It would be more helpful if both species were on one map…\n\nggplot() + \n  annotation_map_tile(type = \"osm\", progress = \"none\") + \n  geom_sf(data = oceanshark_ps, color = \"#85B22C\") + \n  geom_sf(data = oceanshark_ds, color = \"#422CB2\")\n\n\n\n\nThat’s better!\nNow the fun part - creating interactive maps with both species (with the leaflet package)!\n\nleaflet() %&gt;% \n  addTiles(group = \"Default\") %&gt;%\n  addCircleMarkers(data = oceanshark_ps, \n                   group = \"Haploblepharus edwardsii\", \n                   radius = 1, \n                   color = \"#85B22C\")%&gt;%\n  addCircleMarkers(data = oceanshark_ds, \n                   group = \"Haploblepharus pictus\", \n                   radius = 1, \n                   color = \"#422CB2\")%&gt;% \n  addLegend(position = \"topright\", colors = c(\"#85B22C\", \"#422CB2\"), labels = c(\"Puffadder shyshark\", \"Dark shyshark\"))\n\n\n\n\n\nLet’s try a different package - mapview - to create an interactive map with a popup for each data point that gives a link to that point’s iNaturalist observation.\nFirst thing’s first - let’s make the links possible (thank you Jasper Slingsby for making this particular skulduggery possible).\n\nloceanshark_ps &lt;- oceanshark_ps %&gt;%\n  mutate(click_url = paste(\"&lt;b&gt;&lt;a href='\", url, \"'&gt;Link to iNat observation&lt;/a&gt;&lt;/b&gt;\"))\n\nloceanshark_ds &lt;- oceanshark_ds %&gt;%\n  mutate(click_url = paste(\"&lt;b&gt;&lt;a href='\", url, \"'&gt;Link to iNat observation&lt;/a&gt;&lt;/b&gt;\"))\n\nFinally - let’s create an interactive map with links to iNaturalist observations!\n\nmapview(oceanshark_ps, col.regions = \"#85B22C\", layer.name = \"Puffadder shyshark\", legend = TRUE,\n        popup = \n          popupTable(loceanshark_ps,\n                     zcol = c(\"user_login\", \"click_url\", \"id\"))) + \nmapview(oceanshark_ds, col.regions = \"#422CB2\", layer.name = \"Dark shyshark\", legend = TRUE,\n        popup = \n          popupTable(loceanshark_ds, \n                     zcol = c(\"user_login\", \"click_url\", \"id\")))\n\n\n\n\n\n\n\nHappy Eddy - ‘Haploblepharus edwardsii’ - photographed at Windmill Beach, Cape Town.\nThank you Jasper Slingsby for providing the base code for this. To access it go to his teaching website plantecolo.gy."
  }
]